[
  "  Web application ,  computer program stored on a remote server and run by its users via a Web browser . A Web application is an advantageous form of software because the use of browsers allows the application to be compatible with most standard computers and operating systems . Moreover, the application does not take up memory on a computer\u2019s hard dive and is accessible from nearly any computer or device a person might use. Multiple users can even use the same application at the same time, allowing for simultaneous participation. Although Web applications always require a network connection, this limitation has lessened in importance as the Internet has become more and more ubiquitous.",
  "Any service offered over the Internet, by definition, is a form of Web application. Examples of Web applications therefore include online forms, shopping carts, video streaming, social media , games, and e-mail. Given their superior accessibility, many Web applications are developed for functions that previously did not require online access, such as word processing , spreadsheet creation, and the editing of graphics or videos.",
  "  Web applications generally use different programming languages for their user-facing front ends (or \u201cclient sides\u201d), which present information, and for their back ends (\u201cserver sides\u201d), which store and retrieve that information. Scripts for applications\u2019 front ends are written in languages like HTML , CSS, and JavaScript, as those are supported by major browsers. PHP and ASP.NET are common choices for back ends. However, since Web applications, unlike mobile applications, frequently lack standard development kits (SDK), developers\u2019 choices for programming their servers are less restricted.",
  "The first Web applications were by necessity simple programs, as every individual Web page on the Internet was at the time a static document. A user would initiate a request on the client side\u2014that is, in a Web browser or an application\u2019s user interface\u2014that a Web server would then send to the Web application server. The application server would perform the requested task\u2014e.g., query a database\u2014and return the results, which would make the return trip to appear on the user\u2019s display. An interactive experience was possible with this basic process for users via online forms and buttons on a succession of different Web pages, but it was limiting in its inefficiency, requiring the server side to send an entirely new Web page each time a user even slightly manipulated the client side.",
  "New possibilities arose in 1995 when the computer services company Netscape Communications Corp. released JavaScript, a programming language that allowed developers to add dynamic elements to the client side of an application. Code could now show or hide elements of a Web page as well as validate a user\u2019s input prior to submission of a form without consulting the server. Major changes still required the loading of new pages, but the result was a faster and therefore a more productive and pleasant experience for users. Animation on websites became easier and more accessible in 1996 through Macromedia Flash, a plug-in multimedia player that also did not need to continually make requests of a company\u2019s servers. Web applications became a recognized concept within the Java language in 1999.",
  "But modern levels of application interactivity did not arrive until AJAX (Asynchronous JavaScript + XML), a new programming model named by user-experience designer Jesse James Garrett in his 2005 paper \u201cAjax: A New Approach to Web Application.\u201d Programmers realized that by breaking an application into multiple tiers, they could use existing software to separate the process of data exchange from the actual presentation of information to users. This reconceptualization of Web programming finally allowed users to have true interaction with Web pages\u2014and therefore Web applications\u2014without the constant interruption of Web page reloading.",
  "The subsequent increase in the capabilities of Web applications has since been bolstered by the 2008 release (and subsequent iterations) of HTML5, which is an updated version of the programming language used to create Web pages, and by that language\u2019s Web application performance interfaces (APIs). Web APIs are used by software to communicate over the Internet with other software and to utilize some of the functions of other software programs. Just as user interfaces allow people to make requests of programs without learning to code, Web APIs allow applications to make requests of other software online without involving people, particularly programmers. These interfaces substantially benefit developers by greatly simplifying the work of coding, and they benefit end users by further improving the functionality of browsers."
]